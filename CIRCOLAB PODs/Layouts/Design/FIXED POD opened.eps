%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.4 (Build 14E46) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1391 905
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1391 905
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.85882354 0.85882354 0.85882354 sc
q
0 0 1391 905 rc
685.50885 409.12344 m
685.55267 413.76581 l
779.90015 469.99823 l
873.10242 525.5481 l
879.99542 525.5481 l
h
685.50885 409.12344 m
f
0.40000001 0.40000001 0.40000001 sc
685.55267 413.76581 m
685.50885 409.12344 l
685.12799 484.83884 l
685.19867 484.61844 l
685.52997 418.30539 l
h
685.55267 413.76581 m
f
685.19867 484.61844 m
685.12799 484.83884 l
886.22845 596.5849 l
878.7312 592.18762 l
778.63928 536.55457 l
h
685.19867 484.61844 m
f
1 1 1 sc
878.7312 592.18762 m
886.22845 596.5849 l
879.99542 525.5481 l
873.10242 525.5481 l
h
878.7312 592.18762 m
f
0.85882354 0.85882354 0.85882354 sc
878.7312 592.18762 m
873.10242 525.5481 l
779.90015 469.99823 l
776.10217 472.05441 l
778.63928 536.55457 l
h
878.7312 592.18762 m
f
782.36658 642.99915 m
886.22845 596.5849 l
685.12799 484.83884 l
580.74634 543.52948 l
h
782.36658 642.99915 m
f
778.63928 536.55457 m
776.10217 472.05441 l
685.52997 418.30539 l
685.19867 484.61844 l
h
778.63928 536.55457 m
f
590.35638 365.93646 m
580.74634 543.52948 l
685.12799 484.83884 l
685.50885 409.12344 l
686.04688 302.16199 l
h
590.35638 365.93646 m
f
0.53333336 0.53333336 0.53333336 sc
879.99542 525.5481 m
920.61292 455.19659 l
918.2207 458.86502 l
879.8587 525.31 l
h
879.99542 525.5481 m
f
0.85882354 0.85882354 0.85882354 sc
918.2207 458.86502 m
920.61292 455.19659 l
731.14764 330.07471 l
735.05634 338.53043 l
h
918.2207 458.86502 m
f
1 1 1 sc
918.2207 458.86502 m
735.05634 338.53043 l
692.1167 412.90411 l
879.8587 525.31 l
h
878.49823 449.47238 m
877.79376 449.42984 l
877.16443 449.16403 l
876.9693 449.03799 l
875.42017 448.03723 l
873.06055 446.51288 l
863.82996 440.54977 l
863.30945 440.07141 l
862.94354 439.41833 l
862.75745 438.63495 l
862.76404 437.77469 l
862.96295 436.8963 l
863.3407 436.05994 l
863.8714 435.32281 l
864.5188 434.73532 l
865.23853 434.33765 l
865.9856 434.15704 l
866.69647 434.2049 l
867.33521 434.47852 l
880.64026 443.14374 l
881.14996 443.61676 l
881.50629 444.26227 l
881.68506 445.03613 l
881.67438 445.88571 l
881.47498 446.7532 l
881.10059 447.57977 l
880.5766 448.3093 l
879.93854 448.89224 l
879.22968 449.28894 l
h
780.17456 384.31213 m
779.39722 384.71878 l
778.58856 384.89398 l
777.80365 384.82559 l
777.09583 384.51804 l
777.00946 384.46228 l
775.61395 383.56076 l
762.00616 374.7699 l
761.41272 374.23532 l
760.98645 373.51654 l
760.75671 372.66238 l
760.73938 371.7312 l
760.93573 370.78656 l
761.33246 369.89313 l
761.90247 369.11209 l
762.60669 368.49689 l
763.39691 368.08948 l
764.21899 367.9176 l
765.01685 367.9928 l
765.73596 368.30966 l
780.79236 378.11548 l
781.3728 378.64355 l
781.78748 379.3533 l
782.0083 380.19623 l
782.02045 381.11496 l
781.82324 382.04709 l
781.43011 382.92932 l
780.86786 383.70181 l
h
780.17456 384.31213 m
f
735.05634 338.53043 m
731.14764 330.07471 l
730.38501 331.39569 l
685.50885 409.12344 l
692.1167 412.90411 l
h
735.05634 338.53043 m
f
0.40000001 0.40000001 0.40000001 sc
685.50885 409.12344 m
879.99542 525.5481 l
879.8587 525.31 l
692.1167 412.90411 l
h
685.50885 409.12344 m
f
0.85882354 0.85882354 0.85882354 sc
730.38501 331.39569 m
686.04688 302.16199 l
685.50885 409.12344 l
h
730.38501 331.39569 m
f
873.06055 446.51288 m
872.33929 438.29279 l
865.9856 434.15704 l
865.23853 434.33765 l
864.5188 434.73532 l
863.8714 435.32281 l
863.3407 436.05994 l
862.96295 436.8963 l
862.76404 437.77469 l
862.75745 438.63495 l
862.94354 439.41833 l
863.30945 440.07141 l
863.82996 440.54977 l
h
873.06055 446.51288 m
f
0.85490197 0.85490197 0.85490197 sc
878.08228 446.15494 m
877.55963 446.88232 l
880.5766 448.3093 l
881.10059 447.57977 l
h
878.08228 446.15494 m
f
878.08228 446.15494 m
881.10059 447.57977 l
881.47498 446.7532 l
878.45551 445.33066 l
h
878.08228 446.15494 m
f
0.82352942 0.82352942 0.82352942 sc
880.5766 448.3093 m
877.55963 446.88232 l
876.92297 447.46341 l
879.93854 448.89224 l
h
880.5766 448.3093 m
f
0.57647061 0.57647061 0.57647061 sc
875.48517 448.0412 m
875.42017 448.03723 l
876.9693 449.03799 l
877.79376 449.42984 l
878.49823 449.47238 l
h
875.48517 448.0412 m
f
0.67843139 0.67843139 0.67843139 sc
875.48517 448.0412 m
878.49823 449.47238 l
879.22968 449.28894 l
876.21545 447.8587 l
h
875.48517 448.0412 m
f
0.45882353 0.45882353 0.45882353 sc
877.79376 449.42984 m
876.9693 449.03799 l
877.16443 449.16403 l
h
877.79376 449.42984 m
f
0.67843139 0.67843139 0.67843139 sc
878.48468 442.84589 m
878.66388 443.61795 l
881.68506 445.03613 l
881.50629 444.26227 l
h
878.48468 442.84589 m
f
0.57647061 0.57647061 0.57647061 sc
878.48468 442.84589 m
881.50629 444.26227 l
881.14996 443.61676 l
878.12842 442.20172 l
h
878.48468 442.84589 m
f
0.7647059 0.7647059 0.7647059 sc
881.68506 445.03613 m
878.66388 443.61795 l
878.65387 444.46542 l
881.67438 445.88571 l
h
881.68506 445.03613 m
f
879.93854 448.89224 m
876.92297 447.46341 l
876.21545 447.8587 l
879.22968 449.28894 l
h
879.93854 448.89224 m
f
0.40000001 0.40000001 0.40000001 sc
867.33521 434.47852 m
866.69647 434.2049 l
865.9856 434.15704 l
872.33929 438.29279 l
877.61908 441.72952 l
880.64026 443.14374 l
h
867.33521 434.47852 m
f
0.45882353 0.45882353 0.45882353 sc
880.64026 443.14374 m
877.61908 441.72952 l
878.12842 442.20172 l
881.14996 443.61676 l
h
880.64026 443.14374 m
f
0.82352942 0.82352942 0.82352942 sc
878.65387 444.46542 m
878.45551 445.33066 l
881.47498 446.7532 l
881.67438 445.88571 l
h
878.65387 444.46542 m
f
777.26917 382.98773 m
780.17456 384.31213 l
780.86786 383.70181 l
777.96082 382.37946 l
h
777.26917 382.98773 m
f
0.7647059 0.7647059 0.7647059 sc
780.17456 384.31213 m
777.26917 382.98773 l
776.49347 383.39285 l
779.39722 384.71878 l
h
780.17456 384.31213 m
f
0.67843139 0.67843139 0.67843139 sc
779.39722 384.71878 m
776.49347 383.39285 l
775.6864 383.56711 l
778.58856 384.89398 l
h
779.39722 384.71878 m
f
0.85882354 0.85882354 0.85882354 sc
761.90247 369.11209 m
761.33246 369.89313 l
760.93573 370.78656 l
760.73938 371.7312 l
760.75671 372.66238 l
760.98645 373.51654 l
761.41272 374.23532 l
762.00616 374.7699 l
775.61395 383.56076 l
775.6864 383.56711 l
776.49347 383.39285 l
777.26917 382.98773 l
777.96082 382.37946 l
778.52155 381.60934 l
778.91327 380.72971 l
779.1095 379.8002 l
779.09668 378.88394 l
778.87567 378.04315 l
778.46118 377.33508 l
777.88135 376.80807 l
764.21899 367.9176 l
763.39691 368.08948 l
762.60669 368.49689 l
h
761.90247 369.11209 m
f
0.7647059 0.7647059 0.7647059 sc
779.09668 378.88394 m
779.1095 379.8002 l
782.02045 381.11496 l
782.0083 380.19623 l
h
779.09668 378.88394 m
f
0.67843139 0.67843139 0.67843139 sc
779.09668 378.88394 m
782.0083 380.19623 l
781.78748 379.3533 l
778.87567 378.04315 l
h
779.09668 378.88394 m
f
0.82352942 0.82352942 0.82352942 sc
782.02045 381.11496 m
779.1095 379.8002 l
778.91327 380.72971 l
781.82324 382.04709 l
h
782.02045 381.11496 m
f
0.85490197 0.85490197 0.85490197 sc
778.91327 380.72971 m
778.52155 381.60934 l
781.43011 382.92932 l
781.82324 382.04709 l
h
778.91327 380.72971 m
f
781.43011 382.92932 m
778.52155 381.60934 l
777.96082 382.37946 l
780.86786 383.70181 l
h
781.43011 382.92932 m
f
0.57647061 0.57647061 0.57647061 sc
778.87567 378.04315 m
781.78748 379.3533 l
781.3728 378.64355 l
778.46118 377.33508 l
h
778.87567 378.04315 m
f
775.6864 383.56711 m
775.61395 383.56076 l
777.00946 384.46228 l
777.80365 384.82559 l
778.58856 384.89398 l
h
775.6864 383.56711 m
f
0.45882353 0.45882353 0.45882353 sc
777.88135 376.80807 m
778.46118 377.33508 l
781.3728 378.64355 l
780.79236 378.11548 l
h
777.88135 376.80807 m
f
0.40000001 0.40000001 0.40000001 sc
777.88135 376.80807 m
780.79236 378.11548 l
765.73596 368.30966 l
765.01685 367.9928 l
764.21899 367.9176 l
h
777.88135 376.80807 m
f
0 i
0 0 0 sc
685.50885 409.12344 m
685.55267 413.76581 l
S
776.10217 472.05441 m
779.90015 469.99823 l
S
0.5 w
873.10242 525.5481 m
878.7312 592.18762 l
S
1 w
886.22845 596.5849 m
878.7312 592.18762 l
S
886.22845 596.5849 m
782.36658 642.99915 l
S
872.33929 438.29279 m
873.06055 446.51288 l
S
879.99542 525.5481 m
886.22845 596.5849 l
S
776.10217 472.05441 m
778.63928 536.55457 l
S
580.74634 543.52948 m
590.35638 365.93646 l
S
782.36658 642.99915 m
580.74634 543.52948 l
S
685.52997 418.30539 m
776.10217 472.05441 l
S
685.12799 484.83884 m
580.74634 543.52948 l
S
0.5 w
886.22845 596.5849 m
685.12799 484.83884 l
S
1 w
685.19867 484.61844 m
685.12799 484.83884 l
S
686.04688 302.16199 m
590.35638 365.93646 l
S
0.5 w
735.05634 338.53043 m
918.2207 458.86502 l
S
1 w
920.61292 455.19659 m
879.99542 525.5481 l
S
0.5 w
920.61292 455.19659 m
918.2207 458.86502 l
S
731.14764 330.07471 m
735.05634 338.53043 l
S
1 w
731.14764 330.07471 m
920.61292 455.19659 l
S
685.50885 409.12344 m
879.99542 525.5481 l
S
0.5 w
879.8587 525.31 m
918.2207 458.86502 l
S
879.99542 525.5481 m
879.8587 525.31 l
S
692.1167 412.90411 m
735.05634 338.53043 l
S
879.8587 525.31 m
692.1167 412.90411 l
S
685.50885 409.12344 m
692.1167 412.90411 l
S
779.39722 384.71878 m
780.17456 384.31213 l
S
1 w
761.33246 369.89313 m
761.90247 369.11209 l
S
779.1095 379.8002 m
779.09668 378.88394 l
S
0.5 w
782.02045 381.11496 m
782.0083 380.19623 l
S
1 w
762.00616 374.7699 m
761.41272 374.23532 l
S
778.52155 381.60934 m
778.91327 380.72971 l
S
0.5 w
781.43011 382.92932 m
781.82324 382.04709 l
S
1 w
779.09668 378.88394 m
778.87567 378.04315 l
S
0.5 w
782.0083 380.19623 m
781.78748 379.3533 l
S
1 w
760.98645 373.51654 m
760.75671 372.66238 l
S
775.61395 383.56076 m
775.6864 383.56711 l
S
0.5 w
777.80365 384.82559 m
778.58856 384.89398 l
S
1 w
778.46118 377.33508 m
777.88135 376.80807 l
S
0.5 w
777.88135 376.80807 m
780.79236 378.11548 l
S
1 w
763.39691 368.08948 m
764.21899 367.9176 l
S
0.5 w
777.09583 384.51804 m
777.80365 384.82559 l
S
1 w
765.01685 367.9928 m
765.73596 368.30966 l
S
777.88135 376.80807 m
764.21899 367.9176 l
S
0.5 w
780.79236 378.11548 m
765.73596 368.30966 l
S
1 w
778.91327 380.72971 m
779.1095 379.8002 l
S
777.96082 382.37946 m
778.52155 381.60934 l
S
0.5 w
780.86786 383.70181 m
781.43011 382.92932 l
S
1 w
760.93573 370.78656 m
761.33246 369.89313 l
S
761.90247 369.11209 m
762.60669 368.49689 l
S
778.87567 378.04315 m
778.46118 377.33508 l
S
0.5 w
781.78748 379.3533 m
781.3728 378.64355 l
S
1 w
762.60669 368.49689 m
763.39691 368.08948 l
S
777.26917 382.98773 m
777.96082 382.37946 l
S
760.75671 372.66238 m
760.73938 371.7312 l
S
760.73938 371.7312 m
760.93573 370.78656 l
S
761.41272 374.23532 m
760.98645 373.51654 l
S
775.6864 383.56711 m
776.49347 383.39285 l
S
0.5 w
778.58856 384.89398 m
779.39722 384.71878 l
S
1 w
877.55963 446.88232 m
878.08228 446.15494 l
S
875.42017 448.03723 m
875.48517 448.0412 l
S
0.5 w
877.79376 449.42984 m
878.49823 449.47238 l
S
1 w
878.66388 443.61795 m
878.48468 442.84589 l
S
862.76404 437.77469 m
862.96295 436.8963 l
S
0.5 w
877.61908 441.72952 m
880.64026 443.14374 l
S
1 w
864.5188 434.73532 m
865.23853 434.33765 l
S
863.30945 440.07141 m
862.94354 439.41833 l
S
876.92297 447.46341 m
877.55963 446.88232 l
S
0.5 w
877.16443 449.16403 m
877.79376 449.42984 l
S
1 w
866.69647 434.2049 m
867.33521 434.47852 l
S
865.9856 434.15704 m
866.69647 434.2049 l
S
878.45551 445.33066 m
878.65387 444.46542 l
S
0.5 w
881.47498 446.7532 m
881.67438 445.88571 l
S
1 w
878.12842 442.20172 m
877.61908 441.72952 l
S
0.5 w
881.14996 443.61676 m
880.64026 443.14374 l
S
881.67438 445.88571 m
881.68506 445.03613 l
S
1 w
878.48468 442.84589 m
878.12842 442.20172 l
S
0.5 w
881.50629 444.26227 m
881.14996 443.61676 l
S
1 w
876.21545 447.8587 m
876.92297 447.46341 l
S
0.5 w
879.22968 449.28894 m
879.93854 448.89224 l
S
1 w
862.75745 438.63495 m
862.76404 437.77469 l
S
878.08228 446.15494 m
878.45551 445.33066 l
S
0.5 w
878.49823 449.47238 m
879.22968 449.28894 l
S
1 w
863.82996 440.54977 m
863.30945 440.07141 l
S
0.5 w
782.02045 381.11496 m
781.82324 382.04709 l
S
1 w
865.23853 434.33765 m
865.9856 434.15704 l
S
863.3407 436.05994 m
863.8714 435.32281 l
S
863.8714 435.32281 m
864.5188 434.73532 l
S
0.5 w
780.79236 378.11548 m
781.3728 378.64355 l
S
1 w
862.94354 439.41833 m
862.75745 438.63495 l
S
0.5 w
881.50629 444.26227 m
881.68506 445.03613 l
S
780.86786 383.70181 m
780.17456 384.31213 l
S
881.10059 447.57977 m
880.5766 448.3093 l
S
1 w
764.21899 367.9176 m
765.01685 367.9928 l
S
0.5 w
880.5766 448.3093 m
879.93854 448.89224 l
S
867.33521 434.47852 m
880.64026 443.14374 l
S
1 w
862.96295 436.8963 m
863.3407 436.05994 l
S
0.5 w
881.10059 447.57977 m
881.47498 446.7532 l
S
1 w
776.49347 383.39285 m
777.26917 382.98773 l
S
875.48517 448.0412 m
876.21545 447.8587 l
S
878.65387 444.46542 m
878.66388 443.61795 l
S
730.38501 331.39569 m
686.04688 302.16199 l
S
873.10242 525.5481 m
879.99542 525.5481 l
S
685.50885 409.12344 m
686.04688 302.16199 l
S
878.7312 592.18762 m
778.63928 536.55457 l
S
778.63928 536.55457 m
685.19867 484.61844 l
S
0.5 w
685.12799 484.83884 m
685.50885 409.12344 l
S
1 w
685.55267 413.76581 m
685.52997 418.30539 l
S
685.52997 418.30539 m
685.19867 484.61844 l
S
685.50885 409.12344 m
730.38501 331.39569 l
S
730.38501 331.39569 m
731.14764 330.07471 l
S
762.00616 374.7699 m
775.61395 383.56076 l
S
877.61908 441.72952 m
872.33929 438.29279 l
S
872.33929 438.29279 m
865.9856 434.15704 l
S
873.06055 446.51288 m
863.82996 440.54977 l
S
873.10242 525.5481 m
779.90015 469.99823 l
S
779.90015 469.99823 m
685.55267 413.76581 l
S
775.61395 383.56076 m
777.00946 384.46228 l
S
777.00946 384.46228 m
777.09583 384.51804 l
S
875.42017 448.03723 m
873.06055 446.51288 l
S
877.16443 449.16403 m
876.9693 449.03799 l
S
876.9693 449.03799 m
875.42017 448.03723 l
S
685.12799 484.83884 m
685.50885 409.12344 l
S
685.12799 484.83884 m
886.22845 596.5849 l
S
ep
end
%%Trailer
%%EOF
